{"version":3,"sources":["webpack:///./src/templates/category-page.js","webpack:///./src/components/ListTitle.jsx"],"names":["CategoryPage","data","location","pageContext","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","category","slice","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","to","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery","ListTitle","textTransform","borderBottom"],"mappings":"0FAAA,yHA+CeA,UAtCM,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAChCC,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAC/BC,EAAWR,EAAYQ,SAASC,MAAM,GAAI,GAEhD,OACE,kBAAC,IAAD,CAAQV,SAAUA,EAAUK,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAOI,IACZ,kBAAC,IAAD,CAAWJ,MAAOI,IACjBH,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBAAIE,MAAO,CAAEC,aAAcC,YAAO,OAChC,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAU,QAAWC,GAAIT,EAAKE,OAAOC,MACjDV,IAGL,+BACGO,EAAKC,YAAYS,KADpB,MAESC,YAAkBX,EAAKY,cAGlC,iCACE,uBACEC,wBAAyB,CACvBC,OAAQd,EAAKC,YAAYc,aAAef,EAAKgB,kBAaxD,IAAMC,EAAS,c,iCCjDtB,oBAaeC,IAXG,SAAC,GAAe,IAAbzB,EAAY,EAAZA,MACnB,OACE,wBAAIY,MAAO,CACTc,cAAc,YACdC,aAAa,MAEZ3B","file":"component---src-templates-category-page-js-e08ba12baa4b9828b80e.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/Seo\"\nimport ListTitle from \"../components/ListTitle\"\nimport { rhythm } from \"../utils/typography\"\nimport { formatReadingTime } from \"../utils/helpers\"\n\nconst CategoryPage = ({ data, location, pageContext }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  const category = pageContext.category.slice(2, -1)\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title={category} />\n      <ListTitle title={category} />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3 style={{ marginBottom: rhythm(1 / 4) }}>\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>\n                {node.frontmatter.date}\n                {` â€¢ ${formatReadingTime(node.timeToRead)}`}\n              </small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default CategoryPage\n\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {frontmatter: {category: {regex: $category }}}\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            category\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\";\n\nconst ListTitle = ({ title }) => {\n  return (\n    <h2 style={{\n      textTransform: `uppercase`,\n      borderBottom: `0`,\n    }}>\n      {title}\n    </h2>\n  )\n}\n\nexport default ListTitle\n"],"sourceRoot":""}
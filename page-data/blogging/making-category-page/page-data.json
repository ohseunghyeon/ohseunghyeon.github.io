{"componentChunkName":"component---src-templates-blog-post-js","path":"/blogging/making-category-page/","webpackCompilationHash":"2908c997211a33cba8aa","result":{"data":{"site":{"siteMetadata":{"title":"Lazy Nyaong","author":"Oh SeungHyeon"}},"markdownRemark":{"id":"c4b50a4c-26fd-55f9-9a2f-ce463962a268","excerpt":"발단 카테고리가 필요하다. 인덱스 페이지에는 글 목록만 있다. 심지어 글 목록이 너무 길어서 어디에 무슨 글이 있는지도 알 수가 없다. 문헌정보학을 전공한 나로써는 정리되지 않은 꼴은 볼 수가 없는 게 당연하다. 카레고리 리스트 만들기 카테고리를 어떻게 만들까? 우선 Gatsby…","html":"<h2>발단</h2>\n<p>카테고리가 필요하다. 인덱스 페이지에는 글 목록만 있다. 심지어 글 목록이 너무 길어서 어디에 무슨 글이 있는지도 알 수가 없다. 문헌정보학을 전공한 나로써는 정리되지 않은 꼴은 볼 수가 없는 게 당연하다.</p>\n<h2>카레고리 리스트 만들기</h2>\n<p>카테고리를 어떻게 만들까? 우선 Gatsby가 데이터를 가져오는 방법을 참고해서 카테고리에 대한 데이터도 가져올 수 있게 해야한다. 가장 쉬운 방법은 각 게시글 markdown의 frontmatter에 category를 넣은 뒤 graphql query로 카테고리 목록을 가져오는 것이다.</p>\n<p>아래와 같이 query로 리스트를 뽑아내면 Nav 정도는 다음과 같이 쉽게 만들 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">query CategoryQuery <span class=\"token punctuation\">{</span>\n  categories<span class=\"token punctuation\">:</span> <span class=\"token function\">allMarkdownRemark</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">limit<span class=\"token punctuation\">:</span> <span class=\"token number\">2000</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">field<span class=\"token punctuation\">:</span> frontmatter___category</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      fieldValue\n      totalCount\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nav</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token punctuation\">{</span>categories<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">category</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>category<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nav</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2>카테고리의 글 목록 페이지 만들기</h2>\n<p>카테고리 별 글 목록은 전체 글 목록 파일을 참조하면 된다. <code class=\"language-text\">gatsby-starter-blog</code>의 전체 글 목록은 <code class=\"language-text\">src/pages/index.js</code> 파일이다. 내 경우엔 <code class=\"language-text\">src/templates/category-page.js</code> 파일을 생성했다.</p>\n<p>문제는 이 template 파일로 어떻게 페이지를 만드는가인데, gatsby의 node-api 중 createPage를 사용해야 한다. <code class=\"language-text\">gatsby-node.js</code> 파일을 살펴보면 글 목록을 graphql로 가져와서 posts를 생성하는 부분이 보인다. 해당 graphql query에 category를 가져오게끔 수정을 가하고, 다음과 같이 createPage 함수를 실행하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 템플릿 파일을 가져와서</span>\n<span class=\"token keyword\">const</span> categoryPage <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./src/templates/category-page.js</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 카테고리 페이지를 만든다.</span>\nCategories<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">category</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      path<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>category<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      component<span class=\"token punctuation\">:</span> categoryPage<span class=\"token punctuation\">,</span>\n      context<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        category<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">^/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>category<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>위의 createPage에서 context로 넘긴 값을 <code class=\"language-text\">category-page.js</code> 에서 받아 사용해야 한다.</p>\n<p>graphql query에서는 다음과 같이 가져오면 되고</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> pageQuery <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query CategoryPage($category: String) {\n    ...\n  }\n</span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<p>Componet에서는 다음과 같이 가져오면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">CategoryPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> location<span class=\"token punctuation\">,</span> pageContext <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> category <span class=\"token operator\">=</span> pageContext<span class=\"token punctuation\">.</span>category\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>참고</h2>\n<p>메뉴에 쓴 햄버거 버튼 - <a href=\"https://codepen.io/okawa-h/pen/xxKzLwm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://codepen.io/okawa-h/pen/xxKzLwm</a></p>","tableOfContents":"<ul>\n<li><a href=\"/blogging/making-category-page/#%EB%B0%9C%EB%8B%A8\">발단</a></li>\n<li><a href=\"/blogging/making-category-page/#%EC%B9%B4%EB%A0%88%EA%B3%A0%EB%A6%AC-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\">카레고리 리스트 만들기</a></li>\n<li><a href=\"/blogging/making-category-page/#%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC%EC%9D%98-%EA%B8%80-%EB%AA%A9%EB%A1%9D-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%A7%8C%EB%93%A4%EA%B8%B0\">카테고리의 글 목록 페이지 만들기</a></li>\n<li><a href=\"/blogging/making-category-page/#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>","timeToRead":1,"frontmatter":{"title":"Gatsby 블로그에 카테고리 만들기","date":"October 04, 2019","description":"Making Category on Gastby blog!","category":"blogging"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blogging/making-category-page/","previous":{"fields":{"slug":"/blogging/add-reading-time-of-post/"},"frontmatter":{"title":"Gatsby에 Reading time 추가하기","category":"blogging"}},"next":null}}}
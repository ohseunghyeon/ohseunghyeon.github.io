{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/reference/순열-구하기/","webpackCompilationHash":"8cdca6db35b9cb84beb9","result":{"data":{"site":{"siteMetadata":{"title":"Lazy Nyaong","author":"Oh SeungHyeon"}},"markdownRemark":{"id":"c85ef602-a3fe-5d2d-b589-975e75eea219","excerpt":"출처 - stackoverflow The following very efficient algorithm uses Heap’s method to generate all permutations of N elements with runtime complexity in O(N!):","html":"<p><a href=\"https://stackoverflow.com/a/37580979/10030879\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">출처 - stackoverflow</a></p>\n<p>The following very efficient algorithm uses Heap’s method to generate all permutations of N elements with runtime complexity in O(N!):</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">permute</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">permutation</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> length <span class=\"token operator\">=</span> permutation<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span>\n      result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>permutation<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      c <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      k <span class=\"token operator\">=</span> i <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span> c<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      p <span class=\"token operator\">=</span> permutation<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      permutation<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> permutation<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      permutation<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span>\n      <span class=\"token operator\">++</span>c<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n      result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>permutation<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      c<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token operator\">++</span>i<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","tableOfContents":"","timeToRead":1,"frontmatter":{"title":"순열 구하기","date":"September 30, 2019","description":"getting permutations in javascript","category":"algorithm/reference"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/algorithm/reference/순열-구하기/","previous":null,"next":{"fields":{"slug":"/algorithm/reference/소수-구하기/"},"frontmatter":{"title":"소수 구하기","category":"algorithm/reference"}}}}}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/hackerrank/Utopian-Tree/","webpackCompilationHash":"c754495c41afe1fba3ac","result":{"data":{"site":{"siteMetadata":{"title":"Lazy Nyaong","author":"Oh SeungHyeon"}},"markdownRemark":{"id":"2610c858-4c5f-525e-a938-a8e74725da56","excerpt":"Problem The Utopian Tree goes through 2 cycles of growth every year. Each spring, it doubles in height. Each summer, its height increases by 1 meter. Laura…","html":"<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">Author dheeraj\nDifficulty Easy</code></pre></div>\n<h2>Problem</h2>\n<p>The Utopian Tree goes through 2 cycles of growth every year. Each spring, it doubles in height. Each summer, its height increases by 1 meter.</p>\n<p>Laura plants a Utopian Tree sapling with a height of 1 meter at the onset of spring. How tall will her tree be after <code class=\"language-text\">n</code> growth cycles?</p>\n<p>For example, if the number of growth cycles is <code class=\"language-text\">n = 5</code>, the calculations are as follows:</p>\n<table>\n<thead>\n<tr>\n<th>Period</th>\n<th>Height</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>2</td>\n</tr>\n<tr>\n<td>2</td>\n<td>3</td>\n</tr>\n<tr>\n<td>3</td>\n<td>6</td>\n</tr>\n<tr>\n<td>4</td>\n<td>7</td>\n</tr>\n<tr>\n<td>5</td>\n<td>14</td>\n</tr>\n</tbody>\n</table>\n<h3>Function Description</h3>\n<p>Complete the utopianTree function in the editor below. It should return the integer height of the tree after the input number of growth cycles.</p>\n<p>utopianTree has the following parameter(s):</p>\n<ul>\n<li>n: an integer, the number of growth cycles to simulate</li>\n</ul>\n<h3>Input Format</h3>\n<p>The first line contains an integer, <code class=\"language-text\">t</code>, the number of test cases.\n<code class=\"language-text\">t</code> subsequent lines each contain an integer, <code class=\"language-text\">n</code>, denoting the number of cycles for that test case.</p>\n<h3>Constraints</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1 &lt;= t &lt;= 10\n0 &lt;= n &lt;= 60</code></pre></div>\n<h3>Output Format</h3>\n<p>For each test case, print the height of the Utopian Tree after  cycles. Each height must be printed on a new line.</p>\n<h3>Sample Input</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">3\n0\n1\n4</code></pre></div>\n<h3>Sample Output</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1\n2\n7</code></pre></div>\n<p>Explanation</p>\n<p>There are 3 test cases.</p>\n<p>In the first case (<code class=\"language-text\">n = 0</code>), the initial height (<code class=\"language-text\">H = 1</code>) of the tree remains unchanged.</p>\n<p>In the second case (<code class=\"language-text\">n = 1</code>), the tree doubles in height and is <code class=\"language-text\">2</code> meters tall after the spring cycle.</p>\n<p>In the third case (<code class=\"language-text\">n = 4</code>), the tree doubles its height in spring (<code class=\"language-text\">n = 1</code>, <code class=\"language-text\">H = 2</code>), then grows a meter in summer (<code class=\"language-text\">n = 2</code>, <code class=\"language-text\">H = 3</code>), then doubles after the next spring (<code class=\"language-text\">n = 3</code>, <code class=\"language-text\">H = 6</code>), and grows another meter after summer (<code class=\"language-text\">n = 4</code>, <code class=\"language-text\">H = 7</code>). Thus, at the end of 4 cycles, its height is <code class=\"language-text\">7</code> meters.</p>\n<h2>풀이</h2>\n<p>간단한 문제다.</p>\n<p>인자로 들어오는 n는 싸이클의 횟수.</p>\n<p>그리고 싸이클은 봄-여름-봄-여름 이렇게 반복된다.</p>\n<p>처음 봄으로 시작해서 싸이클마다 봄이면 <code class=\"language-text\">* 2</code>, 여름이면 <code class=\"language-text\">+ 1</code> 하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">function</span> <span class=\"token function\">utopianTree</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> h <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        i <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> h<span class=\"token operator\">++</span> <span class=\"token punctuation\">:</span> h <span class=\"token operator\">*=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">return</span> h<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/algorithm/hackerrank/Utopian-Tree/#problem\">Problem</a></p>\n<ul>\n<li><a href=\"/algorithm/hackerrank/Utopian-Tree/#function-description\">Function Description</a></li>\n<li><a href=\"/algorithm/hackerrank/Utopian-Tree/#input-format\">Input Format</a></li>\n<li><a href=\"/algorithm/hackerrank/Utopian-Tree/#constraints\">Constraints</a></li>\n<li><a href=\"/algorithm/hackerrank/Utopian-Tree/#output-format\">Output Format</a></li>\n<li><a href=\"/algorithm/hackerrank/Utopian-Tree/#sample-input\">Sample Input</a></li>\n<li><a href=\"/algorithm/hackerrank/Utopian-Tree/#sample-output\">Sample Output</a></li>\n</ul>\n</li>\n<li><a href=\"/algorithm/hackerrank/Utopian-Tree/#%ED%92%80%EC%9D%B4\">풀이</a></li>\n</ul>","timeToRead":2,"frontmatter":{"title":"Utopian Tree","date":"September 05, 2019","description":"hackkerrank practice","category":"algorithm/hackerrank"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/algorithm/hackerrank/Utopian-Tree/","previous":null,"next":null}}}
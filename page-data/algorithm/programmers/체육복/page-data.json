{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/programmers/체육복/","webpackCompilationHash":"9b51a4d12b74e7369479","result":{"data":{"site":{"siteMetadata":{"title":"Lazy Nyaong","author":"Oh SeungHyeon"}},"markdownRemark":{"id":"10818ead-5b03-5f6d-a78e-81f8b8befc1e","excerpt":"…","html":"<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/42862#\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">문제 링크</a></p>\n<h2>문제 설명</h2>\n<p>점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다. 다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다. 학생들의 번호는 체격 순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 있습니다. 예를 들어, 4번 학생은 3번 학생이나 5번 학생에게만 체육복을 빌려줄 수 있습니다. 체육복이 없으면 수업을 들을 수 없기 때문에 체육복을 적절히 빌려 최대한 많은 학생이 체육수업을 들어야 합니다.</p>\n<p>전체 학생의 수 n, 체육복을 도난당한 학생들의 번호가 담긴 배열 lost, 여벌의 체육복을 가져온 학생들의 번호가 담긴 배열 reserve가 매개변수로 주어질 때, 체육수업을 들을 수 있는 학생의 최댓값을 return 하도록 solution 함수를 작성해주세요.</p>\n<h2>제한사항</h2>\n<ul>\n<li>전체 학생의 수는 2명 이상 30명 이하입니다.</li>\n<li>체육복을 도난당한 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.</li>\n<li>여벌의 체육복을 가져온 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.</li>\n<li>여벌 체육복이 있는 학생만 다른 학생에게 체육복을 빌려줄 수 있습니다.</li>\n<li>여벌 체육복을 가져온 학생이 체육복을 도난당했을 수 있습니다. 이때 이 학생은 체육복을 하나만 도난당했다고 가정하며, 남은 체육복이 하나이기에 다른 학생에게는 체육복을 빌려줄 수 없습니다.</li>\n</ul>\n<h2>입출력 예</h2>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>lost</th>\n<th>reserve</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>5</td>\n<td>[2, 4]</td>\n<td>[1, 3, 5]</td>\n<td>5</td>\n</tr>\n<tr>\n<td>5</td>\n<td>[2, 4]</td>\n<td>[3]</td>\n<td>4</td>\n</tr>\n<tr>\n<td>3</td>\n<td>[3]</td>\n<td>[1]</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<h2>입출력 예 설명</h2>\n<p>예제 #1</p>\n<p>1번 학생이 2번 학생에게 체육복을 빌려주고, 3번 학생이나 5번 학생이 4번 학생에게 체육복을 빌려주면 학생 5명이 체육수업을 들을 수 있습니다.</p>\n<p>예제 #2</p>\n<p>3번 학생이 2번 학생이나 4번 학생에게 체육복을 빌려주면 학생 4명이 체육수업을 들을 수 있습니다.</p>\n<p><a href=\"http://hsin.hr/coci/archive/2009_2010/contest6_tasks.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">출처</a></p>\n<h2>풀이</h2>\n<p>잃어버린 학생 배열을 순차적으로 돌면서 여벌을 가지고 있는 학생에게 빌린다.\n제한사항에 주의하며 우선순위를 정해서 빌리면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n<span class=\"token punctuation\">,</span> lost<span class=\"token punctuation\">,</span> reserve</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> lostList <span class=\"token operator\">=</span> lost<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> l</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> itsReserve <span class=\"token operator\">=</span> reserve<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>itsReserve<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        reserve<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>itsReserve<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> minusReserve <span class=\"token operator\">=</span> reserve<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>l <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>minusReserve <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token operator\">~</span>lost<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>l <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        reserve<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>minusReserve<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> plusReserve <span class=\"token operator\">=</span> reserve<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>l <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>plusReserve <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token operator\">~</span>lost<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>l <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        reserve<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>plusReserve<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>list<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> n <span class=\"token operator\">-</span> lostList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","tableOfContents":"<ul>\n<li><a href=\"/algorithm/programmers/%EC%B2%B4%EC%9C%A1%EB%B3%B5/#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\">문제 설명</a></li>\n<li><a href=\"/algorithm/programmers/%EC%B2%B4%EC%9C%A1%EB%B3%B5/#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\">제한사항</a></li>\n<li><a href=\"/algorithm/programmers/%EC%B2%B4%EC%9C%A1%EB%B3%B5/#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\">입출력 예</a></li>\n<li><a href=\"/algorithm/programmers/%EC%B2%B4%EC%9C%A1%EB%B3%B5/#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\">입출력 예 설명</a></li>\n<li><a href=\"/algorithm/programmers/%EC%B2%B4%EC%9C%A1%EB%B3%B5/#%ED%92%80%EC%9D%B4\">풀이</a></li>\n</ul>","timeToRead":2,"frontmatter":{"title":"체육복","date":"October 08, 2019","description":"프로그래머스 코딩테스트 연습 / 탐욕법","category":"algorithm/programmers"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/algorithm/programmers/체육복/","previous":{"fields":{"slug":"/algorithm/programmers/카펫/"},"frontmatter":{"title":"카펫","category":"algorithm/programmers"}},"next":{"fields":{"slug":"/algorithm/programmers/조이스틱/"},"frontmatter":{"title":"조이스틱","category":"algorithm/programmers"}}}}}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/programmers/쇠막대기/","webpackCompilationHash":"1404a818ee08c853d616","result":{"data":{"site":{"siteMetadata":{"title":"Lazy Nyaong","author":"Oh SeungHyeon"}},"markdownRemark":{"id":"15568b95-d4bf-5f92-bde6-338ddb364707","excerpt":"…","html":"<h2 id=\"문제-설명\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h2>\n<p>여러 개의 쇠막대기를 레이저로 절단하려고 합니다. 효율적인 작업을 위해서 쇠막대기를 아래에서 위로 겹쳐 놓고, 레이저를 위에서 수직으로 발사하여 쇠막대기들을 자릅니다. 쇠막대기와 레이저의 배치는 다음 조건을 만족합니다.</p>\n<ul>\n<li>쇠막대기는 자신보다 긴 쇠막대기 위에만 놓일 수 있습니다.</li>\n<li>쇠막대기를 다른 쇠막대기 위에 놓는 경우 완전히 포함되도록 놓되, 끝점은 겹치지 않도록 놓습니다.</li>\n<li>각 쇠막대기를 자르는 레이저는 적어도 하나 존재합니다.</li>\n<li>레이저는 어떤 쇠막대기의 양 끝점과도 겹치지 않습니다.\n아래 그림은 위 조건을 만족하는 예를 보여줍니다. 수평으로 그려진 굵은 실선은 쇠막대기이고, 점은 레이저의 위치, 수직으로 그려진 점선 화살표는 레이저의 발사 방향입니다.</li>\n</ul>\n<p><img src=\"https://grepp-programmers.s3.amazonaws.com/files/ybm/dbd166625b/d3ae656b-bb7b-421c-9f74-fa9ea800b860.png\" alt=\"satisfied cut example\"></p>\n<p>이러한 레이저와 쇠막대기의 배치는 다음과 같이 괄호를 이용하여 왼쪽부터 순서대로 표현할 수 있습니다.</p>\n<ul>\n<li>(a) 레이저는 여는 괄호와 닫는 괄호의 인접한 쌍 ’()‘으로 표현합니다. 또한 모든 ’()‘는 반드시 레이저를 표현합니다.</li>\n<li>(b) 쇠막대기의 왼쪽 끝은 여는 괄호 ’(‘로, 오른쪽 끝은 닫힌 괄호 ’)‘로 표현됩니다.</li>\n</ul>\n<p>위 예의 괄호 표현은 그림 위에 주어져 있습니다.</p>\n<p>쇠막대기는 레이저에 의해 몇 개의 조각으로 잘리는데, 위 예에서 가장 위에 있는 두 개의 쇠막대기는 각각 3개와 2개의 조각으로 잘리고, 이와 같은 방식으로 주어진 쇠막대기들은 총 17개의 조각으로 잘립니다.</p>\n<p>쇠막대기와 레이저의 배치를 표현한 문자열 arrangement가 매개변수로 주어질 때, 잘린 쇠막대기 조각의 총 개수를 return 하도록 solution 함수를 작성해주세요.</p>\n<p>제한사항\narrangement의 길이는 최대 100,000입니다.\narrangement의 여는 괄호와 닫는 괄호는 항상 쌍을 이룹니다.\n입출력 예</p>\n<table>\n<thead>\n<tr>\n<th>arrangement</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>()(((()())(())()))(())</td>\n<td>17</td>\n</tr>\n</tbody>\n</table>\n<p>입출력 예 설명\n문제에 나온 예와 같습니다.</p>\n<p><a href=\"https://www.digitalculture.or.kr/koi/selectOlymPiadDissentList.do\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">출처</a></p>\n<h2 id=\"풀이\"><a href=\"#%ED%92%80%EC%9D%B4\" aria-label=\"풀이 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이</h2>\n<p>arrangement를 첫 번째부터 마지막까지 순회하면서 레이저와 막대기를 구분한다.</p>\n<p>가져야 할 변수는</p>\n<ul>\n<li>현재 막대기 수</li>\n<li>잘려나온 막대기 수</li>\n</ul>\n<p>로직은</p>\n<p>레이저가 나올 경우 현재 막대기 수만큼 잘려나온 막대기 수를 더한다.\n그리고 막대기 수가 줄어들면 그 수만큼 잘려나온 막대기 수에 더한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arrangement</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> cutStick <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        stick <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        lastA<span class=\"token punctuation\">,</span>\n        a<span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arrangement<span class=\"token punctuation\">.</span>length <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arrangement<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              lastA <span class=\"token operator\">=</span> arrangement<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n              a <span class=\"token operator\">=</span> arrangement<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n              <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lastA <span class=\"token operator\">===</span> <span class=\"token string\">'('</span> <span class=\"token operator\">&amp;&amp;</span> a <span class=\"token operator\">===</span> <span class=\"token string\">'('</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token comment\">// 스틱 하나 추가</span>\n                  stick<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lastA <span class=\"token operator\">===</span> <span class=\"token string\">'('</span> <span class=\"token operator\">&amp;&amp;</span> a <span class=\"token operator\">===</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token comment\">// 레이저, 잘린 스틱 stick 만큼 추가</span>\n                  cutStick <span class=\"token operator\">+=</span> stick<span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lastA <span class=\"token operator\">===</span> <span class=\"token string\">')'</span> <span class=\"token operator\">&amp;&amp;</span> a <span class=\"token operator\">===</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token comment\">// 잘린 스틱 하나 추가</span>\n                  stick<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n                  cutStick<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      \n      <span class=\"token keyword\">return</span> cutStick<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>if 문을 중첩하면 코드 수를 줄일 수 있지만, 가독성이 안 좋을 것 같다</p>\n<h2 id=\"다른-사람-풀이\"><a href=\"#%EB%8B%A4%EB%A5%B8-%EC%82%AC%EB%9E%8C-%ED%92%80%EC%9D%B4\" aria-label=\"다른 사람 풀이 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 사람 풀이</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arrangement</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> aTemp <span class=\"token operator\">=</span> arrangement<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"+\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> nTemp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> aTemp<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>aTemp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">case</span> <span class=\"token string\">'('</span> <span class=\"token punctuation\">:</span>\n                nTemp<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                answer<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token string\">')'</span> <span class=\"token punctuation\">:</span>\n                nTemp<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token string\">'+'</span> <span class=\"token punctuation\">:</span>\n                answer <span class=\"token operator\">+=</span> nTemp<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>레이저를 걸러내고</li>\n<li>남은 막대만 가지고 경우마다 계산한다.</li>\n</ol>","tableOfContents":"<ul>\n<li><a href=\"/algorithm/programmers/%EC%87%A0%EB%A7%89%EB%8C%80%EA%B8%B0/#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\">문제 설명</a></li>\n<li><a href=\"/algorithm/programmers/%EC%87%A0%EB%A7%89%EB%8C%80%EA%B8%B0/#%ED%92%80%EC%9D%B4\">풀이</a></li>\n<li><a href=\"/algorithm/programmers/%EC%87%A0%EB%A7%89%EB%8C%80%EA%B8%B0/#%EB%8B%A4%EB%A5%B8-%EC%82%AC%EB%9E%8C-%ED%92%80%EC%9D%B4\">다른 사람 풀이</a></li>\n</ul>","timeToRead":2,"frontmatter":{"title":"쇠막대기","date":"September 05, 2019","description":"프로그래머스 코딩테스트 연습 > 스택/큐","category":"algorithm/programmers"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/algorithm/programmers/쇠막대기/","previous":{"fields":{"slug":"/algorithm/programmers/기능개발/"},"frontmatter":{"title":"기능개발","category":"algorithm/programmers"}},"next":{"fields":{"slug":"/algorithm/programmers/스킬트리/"},"frontmatter":{"title":"스킬트리","category":"algorithm/programmers"}}}}}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/programmers/스킬트리/","webpackCompilationHash":"aef4a07152ba7ad2a63c","result":{"data":{"site":{"siteMetadata":{"title":"Lazy Nyaong","author":"Oh SeungHyeon"}},"markdownRemark":{"id":"d9cc46a7-cb45-5ef1-8278-b0eee540e2f2","excerpt":"…","html":"<h2>문제 설명</h2>\n<p>선행 스킬이란 어떤 스킬을 배우기 전에 먼저 배워야 하는 스킬을 뜻합니다.</p>\n<p>예를 들어 선행 스킬 순서가 <code class=\"language-text\">스파크 → 라이트닝 볼트 → 썬더</code>일때, 썬더를 배우려면 먼저 라이트닝 볼트를 배워야 하고, 라이트닝 볼트를 배우려면 먼저 스파크를 배워야 합니다.</p>\n<p>위 순서에 없는 다른 스킬(힐링 등)은 순서에 상관없이 배울 수 있습니다. 따라서 <code class=\"language-text\">스파크 → 힐링 → 라이트닝 볼트 → 썬더</code>와 같은 스킬트리는 가능하지만, <code class=\"language-text\">썬더 → 스파크</code>나 <code class=\"language-text\">라이트닝 볼트 → 스파크 → 힐링 → 썬더</code>와 같은 스킬트리는 불가능합니다.</p>\n<p>선행 스킬 순서 skill과 유저들이 만든 스킬트리( 유저가 스킬을 배울 순서)를 담은 배열 skill_trees가 매개변수로 주어질 때, 가능한 스킬트리 개수를 return 하는 solution 함수를 작성해주세요.</p>\n<h2>제한 조건</h2>\n<ul>\n<li>스킬은 알파벳 대문자로 표기하며, 모든 문자열은 알파벳 대문자로만 이루어져 있습니다.</li>\n<li>\n<p>스킬 순서와 스킬트리는 문자열로 표기합니다.</p>\n<ul>\n<li>예를 들어, <code class=\"language-text\">C → B → D</code> 라면 CBD로 표기합니다</li>\n</ul>\n</li>\n<li>선행 스킬 순서 skill의 길이는 1 이상 26 이하이며, 스킬은 중복해 주어지지 않습니다.</li>\n<li>skill_trees는 길이 1 이상 20 이하인 배열입니다.</li>\n<li>\n<p>skill_trees의 원소는 스킬을 나타내는 문자열입니다.</p>\n<ul>\n<li>skill_trees의 원소는 길이가 2 이상 26 이하인 문자열이며, 스킬이 중복해 주어지지 않습니다.</li>\n</ul>\n</li>\n</ul>\n<h2>입출력 예</h2>\n<table>\n<thead>\n<tr>\n<th>skill</th>\n<th>skill_trees</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>“CBD”</td>\n<td>[“BACDE”, “CBADF”, “AECB”, “BDA”]</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<h2>입출력 예 설명</h2>\n<ul>\n<li>BACDE: B 스킬을 배우기 전에 C 스킬을 먼저 배워야 합니다. 불가능한 스킬트립니다.</li>\n<li>CBADF: 가능한 스킬트리입니다.</li>\n<li>AECB: 가능한 스킬트리입니다.</li>\n<li>BDA: B 스킬을 배우기 전에 C 스킬을 먼저 배워야 합니다. 불가능한 스킬트리입니다.</li>\n</ul>\n<h2>풀이</h2>\n<ol>\n<li>선행 스킬의 맵을 만든다.</li>\n</ol>\n<p>skill 이 CBD의 경우</p>\n<p>{\n“B”: “C”,\n“D”: “B”\n}</p>\n<p>이처럼 B를 익히려면 C가 필요하고\nD를 익히려면 B가 필요하다는 정보를 담은 해쉬맵을 만들고</p>\n<p>skill_tress에 있는 유저들의 스킬트리를 각각 체크한다.</p>\n<p>순서대로 하나 하나 스킬을 익혀가는데, 이 때 선행 스킬이 필요하면 선행 스킬을 익혔는지 확인하고, 필요하지 않으면 그냥 익힌다.</p>\n<p>선행 스킬이 필요한데 익히지 않은 경우는 세지 않으면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">skill<span class=\"token punctuation\">,</span> skill_trees</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      \n      <span class=\"token comment\">// 미리 익혀야 하는 스킬의 맵</span>\n      <span class=\"token keyword\">const</span> prerequisite <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> skill<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> skillNeeded <span class=\"token operator\">=</span> skill<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> skillToLearn <span class=\"token operator\">=</span> skill<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          \n          prerequisite<span class=\"token punctuation\">[</span>skillToLearn<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> skillNeeded<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      \n      <span class=\"token keyword\">const</span> cnt <span class=\"token operator\">=</span> skill_trees<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cnt<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> tree <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n          \n          <span class=\"token comment\">// 스킬 트리를 순회하며 스킬 익혀보기</span>\n          <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> cur<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">const</span> skill <span class=\"token operator\">=</span> cur<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n              \n              <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prerequisite<span class=\"token punctuation\">[</span>skill<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token comment\">// 선행 스킬이 필요</span>\n                  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tree<span class=\"token punctuation\">[</span>prerequisite<span class=\"token punctuation\">[</span>skill<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                      <span class=\"token comment\">// 선행 스킬을 익힌 경우</span>\n                      tree<span class=\"token punctuation\">[</span>skill<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                      <span class=\"token keyword\">return</span> cnt<span class=\"token punctuation\">;</span>\n                  <span class=\"token punctuation\">}</span>\n              <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token comment\">// 그냥 익혀도 됨</span>\n                  tree<span class=\"token punctuation\">[</span>skill<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n          \n          <span class=\"token keyword\">return</span> cnt <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      \n      <span class=\"token keyword\">return</span> cnt<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h2>다른 사람 풀이</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">skill<span class=\"token punctuation\">,</span> skill_trees</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> regex <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[^</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>skill<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">return</span> skill_trees\n          <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>regex<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">return</span> skill<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> x <span class=\"token operator\">===</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span>length\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>스킬 트리를 순회하며</li>\n<li>정규표현식으로 선행 스킬과 관련이 없는 스킬은 지우고</li>\n<li>선행 스킬과 관련된 애들만 가지고 그 순서를 indexOf로 체크한다</li>\n</ol>","frontmatter":{"title":"스킬트리","date":"September 06, 2019","description":"프로그래머스 코딩테스트 연습 / 2018 윈터코딩"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/algorithm/programmers/스킬트리/","previous":{"fields":{"slug":"/blogging/now/"},"frontmatter":{"title":"github 저장소에 now 적용기"}},"next":{"fields":{"slug":"/algorithm/programmers/다리를-지나는-트럭/"},"frontmatter":{"title":"다리를 지나는 트럭"}}}}}
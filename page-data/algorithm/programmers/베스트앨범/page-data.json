{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/programmers/베스트앨범/","webpackCompilationHash":"6261dd7aa61d08926e59","result":{"data":{"site":{"siteMetadata":{"title":"Lazy Nyaong","author":"Oh SeungHyeon"}},"markdownRemark":{"id":"7a20172b-d35d-54f2-94fe-fb0ef98290b0","excerpt":"…","html":"<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/42579\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">문제 링크</a></p>\n<h2>문제 설명</h2>\n<p>스트리밍 사이트에서 장르 별로 가장 많이 재생된 노래를 두 개씩 모아 베스트 앨범을 출시하려 합니다. 노래는 고유 번호로 구분하며, 노래를 수록하는 기준은 다음과 같습니다.</p>\n<ol>\n<li>속한 노래가 많이 재생된 장르를 먼저 수록합니다.</li>\n<li>장르 내에서 많이 재생된 노래를 먼저 수록합니다.</li>\n<li>장르 내에서 재생 횟수가 같은 노래 중에서는 고유 번호가 낮은 노래를 먼저 수록합니다.</li>\n</ol>\n<p>노래의 장르를 나타내는 문자열 배열 genres와 노래별 재생 횟수를 나타내는 정수 배열 plays가 주어질 때, 베스트 앨범에 들어갈 노래의 고유 번호를 순서대로 return 하도록 solution 함수를 완성하세요.</p>\n<h2>제한사항</h2>\n<ul>\n<li>genres[i]는 고유번호가 i인 노래의 장르입니다.</li>\n<li>plays[i]는 고유번호가 i인 노래가 재생된 횟수입니다.</li>\n<li>genres와 plays의 길이는 같으며, 이는 1 이상 10,000 이하입니다.</li>\n<li>장르 종류는 100개 미만입니다.</li>\n<li>장르에 속한 곡이 하나라면, 하나의 곡만 선택합니다.</li>\n<li>모든 장르는 재생된 횟수가 다릅니다.</li>\n</ul>\n<h2>입출력 예</h2>\n<table>\n<thead>\n<tr>\n<th>genres</th>\n<th>plays</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[classic, pop, classic, classic, pop]</td>\n<td>[500, 600, 150, 800, 2500]</td>\n<td>[4, 1, 3, 0]</td>\n</tr>\n</tbody>\n</table>\n<h2>입출력 예 설명</h2>\n<p>classic 장르는 1,450회 재생되었으며, classic 노래는 다음과 같습니다.</p>\n<p>-고유 번호 3: 800회 재생\n-고유 번호 0: 500회 재생\n-고유 번호 2: 150회 재생</p>\n<p>pop 장르는 3,100회 재생되었으며, pop 노래는 다음과 같습니다.</p>\n<ul>\n<li>고유 번호 4: 2,500회 재생</li>\n<li>고유 번호 1: 600회 재생</li>\n</ul>\n<p>따라서 pop 장르의 [4, 1]번 노래를 먼저, classic 장르의 [3, 0]번 노래를 그다음에 수록합니다.</p>\n<h2>풀이</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">genres<span class=\"token punctuation\">,</span> plays</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> playsByGenres <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 장르와 플레이의 배열을 순회하며 각 장르의 합과 1, 2 번째로 많이 재생된 곡을 걸러낸다.</span>\n    <span class=\"token keyword\">let</span> genre<span class=\"token punctuation\">,</span> play<span class=\"token punctuation\">,</span> temp<span class=\"token punctuation\">;</span>\n    genres<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">g<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>playsByGenres<span class=\"token punctuation\">[</span>g<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            playsByGenres<span class=\"token punctuation\">[</span>g<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                sum<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                first<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                second<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        genre <span class=\"token operator\">=</span> playsByGenres<span class=\"token punctuation\">[</span>g<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        play <span class=\"token operator\">=</span> plays<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        genre<span class=\"token punctuation\">.</span>sum <span class=\"token operator\">+=</span> plays<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>genre<span class=\"token punctuation\">.</span>first <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">||</span> plays<span class=\"token punctuation\">[</span>genre<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> play<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            temp <span class=\"token operator\">=</span> genre<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">;</span>\n            genre<span class=\"token punctuation\">.</span>first <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>genre<span class=\"token punctuation\">.</span>second <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">||</span> plays<span class=\"token punctuation\">[</span>genre<span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> plays<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                genre<span class=\"token punctuation\">.</span>second <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>genre<span class=\"token punctuation\">.</span>second <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">||</span> plays<span class=\"token punctuation\">[</span>genre<span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> play<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            genre<span class=\"token punctuation\">.</span>second <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>playsByGenres<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// 장르 별로 정렬한 후에</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> playsByGenres<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sum <span class=\"token operator\">-</span> playsByGenres<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sum<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// 장르별 첫 번째와 두 번째 곡을 결과에 담는다.</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">g</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            genre <span class=\"token operator\">=</span> playsByGenres<span class=\"token punctuation\">[</span>g<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            answer<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>genre<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 한 장르에 곡이 하나일 수도 있다.</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>genre<span class=\"token punctuation\">.</span>second <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                answer<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>genre<span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"베스트앨범","date":"September 18, 2019","description":"프로그래머스 코딩테스트 연습 / 고득점 kit / 해시"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/algorithm/programmers/베스트앨범/","previous":{"fields":{"slug":"/blogging/deploying-github-pages-with-github-actions/"},"frontmatter":{"title":"Github pages를 github actions로 자동 배포하기"}},"next":{"fields":{"slug":"/algorithm/programmers/프린터/"},"frontmatter":{"title":"프린터"}}}}}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/report/2020-1-2/","webpackCompilationHash":"218490ff56dfe3aae425","result":{"data":{"site":{"siteMetadata":{"title":"Lazy Nyaong","author":"Oh SeungHyeon"}},"markdownRemark":{"id":"b57d546e-33b2-5729-89fb-2bca60bde9ce","excerpt":"System Design: Tinder as a microservice architecture, Gaurav Sen, 2018.7.2 Tinder Architecture Store Profiles (Images) - 5 images per user Recommend matches…","html":"<h2 id=\"system-design-tinder-as-a-microservice-architecture-gaurav-sen-201872\"><a href=\"#system-design-tinder-as-a-microservice-architecture-gaurav-sen-201872\" aria-label=\"system design tinder as a microservice architecture gaurav sen 201872 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://www.youtube.com/watch?v=tndzLznxq40\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">System Design: Tinder as a microservice architecture, Gaurav Sen, 2018.7.2</a></h2>\n<p>Tinder Architecture</p>\n<ol>\n<li>Store Profiles (Images) - 5 images per user</li>\n<li>Recommend matches (Active 유저의 수)</li>\n<li>note matches</li>\n<li>Direct Messaging</li>\n</ol>\n<p>Image를 저장할 때의 관건은 File vs Blob(DB)</p>\n<h3 id=\"features-you-get-when-you-use-dbstoring-images-as-blob\"><a href=\"#features-you-get-when-you-use-dbstoring-images-as-blob\" aria-label=\"features you get when you use dbstoring images as blob permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>features you get when you use DB(Storing Images as Blob)</h3>\n<ol>\n<li>Mutability - not really need Mutability. why not just save separate file</li>\n<li>Transaction guarantees - there’s no need to do some atomic operation on images</li>\n<li>indexes(Improve Search) - because we don’t need to search data on Blob (it’s just 0s and 1s), it’s not also needed</li>\n<li>Access Control</li>\n</ol>\n<h3 id=\"good-things-when-you-use-file-system\"><a href=\"#good-things-when-you-use-file-system\" aria-label=\"good things when you use file system permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>good things when you use File System</h3>\n<ol>\n<li>Cheaper</li>\n<li>Faster</li>\n<li>Content Delivery network</li>\n</ol>\n<h3 id=\"how-to-implement-updating-profiles\"><a href=\"#how-to-implement-updating-profiles\" aria-label=\"how to implement updating profiles permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to implement Updating Profiles</h3>\n<p>on traditional Monolitic system, you can have user account and password(or token) on request and update profile and send success response. that’s enough for now. but what if we have another feature on tomorrow and need authentication for that feature too.</p>\n<p>good way is to have a Gateway Service and so decouple system and no need to duplicate authentication logic.</p>\n<h3 id=\"how-to-send-direct-messages\"><a href=\"#how-to-send-direct-messages\" aria-label=\"how to send direct messages permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to send Direct Messages</h3>\n<h4 id=\"protocol\"><a href=\"#protocol\" aria-label=\"protocol permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Protocol</h4>\n<p>on Client-Server communication protocol, HTTP? it is inefficient. peer-peer protocol would be better. XMPP is what you want to use.</p>\n<p>on Websocket or TCP</p>\n<h4 id=\"whos-gonna-maintain-these-connections\"><a href=\"#whos-gonna-maintain-these-connections\" aria-label=\"whos gonna maintain these connections permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Who’s gonna maintain these connections</h4>\n<p>It can be served by Gateway Service. but decouple as much as possible. so make Sessions Service.</p>\n<h3 id=\"noting-recommendation\"><a href=\"#noting-recommendation\" aria-label=\"noting recommendation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Noting Recommendation</h3>\n<p>Profile Service could handle it or Matcher service would handle it.</p>\n<h3 id=\"how-to-recommend-matching\"><a href=\"#how-to-recommend-matching\" aria-label=\"how to recommend matching permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to Recommend Matching</h3>\n<p>there are ages, locations, etc on profile DB. which DB would be good.</p>\n<ol>\n<li>Cassandra/Dynamo</li>\n<li>sharding -> horizontal partitioning (spliting data by location or ages, and searching)</li>\n</ol>\n<h2 id=\"optional-chaining-for-javascript\"><a href=\"#optional-chaining-for-javascript\" aria-label=\"optional chaining for javascript permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/tc39/proposal-optional-chaining/blob/master/README.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Optional Chaining for JavaScript</a></h2>\n<h2 id=\"why-youll-like-javascript-optional-chaining-dmitri-pavlutin-2019821\"><a href=\"#why-youll-like-javascript-optional-chaining-dmitri-pavlutin-2019821\" aria-label=\"why youll like javascript optional chaining dmitri pavlutin 2019821 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://dmitripavlutin.com/javascript-optional-chaining/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Why You’ll Like JavaScript Optional Chaining, Dmitri Pavlutin, 2019.8.21</a></h2>\n<p>When you need to access a property in super nested object, <strong>optional chaining</strong> can help you avoid long, boring check logic to check if there’s the property.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> name<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>movie<span class=\"token punctuation\">.</span>director <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  name <span class=\"token operator\">=</span> movie<span class=\"token punctuation\">.</span>director<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>can be like below</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> movie<span class=\"token punctuation\">.</span>director<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span></code></pre></div>\n<p>By using nullish coalescing, you can get default value.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> noValue <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">;</span>\n\nnoValue <span class=\"token operator\">?</span><span class=\"token operator\">?</span> <span class=\"token string\">'Nothing'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// => 'Nothing'</span>\nvalue   <span class=\"token operator\">?</span><span class=\"token operator\">?</span> <span class=\"token string\">'Nothing'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// => 'Hello'</span></code></pre></div>\n<h2 id=\"http2-rfc를-응용한-http2-checker의-구현\"><a href=\"#http2-rfc%EB%A5%BC-%EC%9D%91%EC%9A%A9%ED%95%9C-http2-checker%EC%9D%98-%EA%B5%AC%ED%98%84\" aria-label=\"http2 rfc를 응용한 http2 checker의 구현 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://www.popit.kr/http2-rfc%EB%A5%BC-%EC%9D%91%EC%9A%A9%ED%95%9C-http2-checker%EC%9D%98-%EA%B5%AC%ED%98%84/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HTTP/2 RFC를 응용한 HTTP/2 Checker의 구현</a></h2>\n<p>RFC 명세에 따라 서버의 HTTP/2를 테스트하는 방법을 파이썬으로 구현하는 방법에 대해 서술</p>\n<h2 id=\"whats-going-on-with-the-oauth-20-implicit-flow\"><a href=\"#whats-going-on-with-the-oauth-20-implicit-flow\" aria-label=\"whats going on with the oauth 20 implicit flow permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://www.youtube.com/watch?v=CHzERullHe8\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">What’s going on with the OAuth 2.0 Implicit flow?</a></h2>\n<p>Q: 유저 인증한 시점에 redirect<em>uri로 access</em>token을 함께 던져주는 건 왜 안 될까?</p>\n<p>A: redirection이 탈취될 경우 키 또한 바로 탈취될 수 있다.</p>\n<p>Q: 그럼 authorization<em>code를 가지고 /token에 post를 날려서 access</em>token을 얻는 건 안 위험한가?</p>\n<p>A: 보안에 100%는 없지만 redirection 도중 탈취되는 것처럼 비교적 쉬운 보안상 문제는 막을 수 있다.</p>\n<p>네트워크상의 오고 가는 uri를 로깅해서 access_token을 얻는다거나, 요즘은 브라우저의 extension에게도 권한을 주기 때문에 URL 들을 쉽게 볼 수 있게 된다.</p>\n<p>구글 브라우저는 브라우저 히스토리를 싱크하기 떄문에 그 과정에서도 URL은 구글로 가는 도중 다른 곳에서 가져갈 수도 있다.</p>\n<p>이런 다양한 경로의 URI 탈취에 비하면 POST Request는 위협의 경우가 다르다.</p>\n<hr>\n<p>10년 전 쯤에는 implicit flow를 통해 모바일 앱(public clients - which secret can’t be kept securely)의 Oauth를 구현하는 게 자연스러웠다.</p>\n<p>그러다가 PKCE가 나타나서 이를 보완해줬다. (PKCE - makes up a new secret on the fly every time, hashes it and then does the regular OAuth flow)</p>\n<p>그렇다면 PKCE는 얼마나 안전한가?</p>\n<p>PKCE는 Redirect Step을 보호할 뿐이다. 결국엔 access_token을 가지고 뭔가를 해야하며 그 부분은 기존과 동일하다.</p>\n<p>그렇다면 이런 다른 부분에서 오는 구멍을 보안할 방법은 무엇인가?</p>\n<ul>\n<li>어떤 코드가 돌고 있는지 확인하고</li>\n<li>임의의 모르는 자바스크립트를 CDN에서 로드하지 말고</li>\n<li>HTTPS를 사용하고(Let’s encrypt)</li>\n<li>long lived HSTS policy를 설정하고</li>\n<li>good content security policy</li>\n</ul>\n<p>OWASP 참고하세요.</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/report/2020-1-2/#system-design-tinder-as-a-microservice-architecture-gaurav-sen-201872\">System Design: Tinder as a microservice architecture, Gaurav Sen, 2018.7.2</a></p>\n<ul>\n<li><a href=\"/report/2020-1-2/#features-you-get-when-you-use-dbstoring-images-as-blob\">features you get when you use DB(Storing Images as Blob)</a></li>\n<li><a href=\"/report/2020-1-2/#good-things-when-you-use-file-system\">good things when you use File System</a></li>\n<li><a href=\"/report/2020-1-2/#how-to-implement-updating-profiles\">How to implement Updating Profiles</a></li>\n<li>\n<p><a href=\"/report/2020-1-2/#how-to-send-direct-messages\">How to send Direct Messages</a></p>\n<ul>\n<li><a href=\"/report/2020-1-2/#protocol\">Protocol</a></li>\n<li><a href=\"/report/2020-1-2/#whos-gonna-maintain-these-connections\">Who’s gonna maintain these connections</a></li>\n</ul>\n</li>\n<li><a href=\"/report/2020-1-2/#noting-recommendation\">Noting Recommendation</a></li>\n<li><a href=\"/report/2020-1-2/#how-to-recommend-matching\">How to Recommend Matching</a></li>\n</ul>\n</li>\n<li><a href=\"/report/2020-1-2/#optional-chaining-for-javascript\">Optional Chaining for JavaScript</a></li>\n<li><a href=\"/report/2020-1-2/#why-youll-like-javascript-optional-chaining-dmitri-pavlutin-2019821\">Why You’ll Like JavaScript Optional Chaining, Dmitri Pavlutin, 2019.8.21</a></li>\n<li><a href=\"/report/2020-1-2/#http2-rfc%EB%A5%BC-%EC%9D%91%EC%9A%A9%ED%95%9C-http2-checker%EC%9D%98-%EA%B5%AC%ED%98%84\">HTTP/2 RFC를 응용한 HTTP/2 Checker의 구현</a></li>\n<li><a href=\"/report/2020-1-2/#whats-going-on-with-the-oauth-20-implicit-flow\">What’s going on with the OAuth 2.0 Implicit flow?</a></li>\n</ul>","timeToRead":4,"frontmatter":{"title":"2020년 1월 둘째 주","date":"January 09, 2020","description":"매주 무엇을 읽고 보았는지 정리하는 글","category":"report"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/report/2020-1-2/","previous":{"fields":{"slug":"/report/2019-12-3/"},"frontmatter":{"title":"2019년 12월 셋째 주","category":"report"}},"next":null}}}
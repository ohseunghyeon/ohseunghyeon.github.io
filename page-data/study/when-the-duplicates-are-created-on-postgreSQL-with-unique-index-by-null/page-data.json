{"componentChunkName":"component---src-templates-blog-post-js","path":"/study/when-the-duplicates-are-created-on-postgreSQL-with-unique-index-by-null/","result":{"data":{"site":{"siteMetadata":{"title":"Lazy Nyaong"}},"markdownRemark":{"id":"e73a12b2-3ee8-5472-b586-8733acda3220","excerpt":"문제의 발단 Unique index가 걸려있는데 데이터가 중복으로 들어가는 현상을 발견했다. (무지하면 어쩔 수 없다) 원인은 Null이 있는 컬럼 때문이었다. Null은 서로 같지 않기 때문에 특정 컬럼에 Null이 들어갈 경우 다른 컬럼이 모두 동일해도 duplicate…","html":"<h2 id=\"문제의-발단\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C%EC%9D%98-%EB%B0%9C%EB%8B%A8\" aria-label=\"문제의 발단 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제의 발단</h2>\n<p>Unique index가 걸려있는데 데이터가 중복으로 들어가는 현상을 발견했다. (무지하면 어쩔 수 없다)</p>\n<p>원인은 Null이 있는 컬럼 때문이었다.</p>\n<p>Null은 서로 같지 않기 때문에 특정 컬럼에 Null이 들어갈 경우 다른 컬럼이 모두 동일해도 duplicate으로 인지되지 않았다.</p>\n<h2 id=\"해결-방법\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결 방법</h2>\n<p>몇 가지 해결 방법을 생각했다.</p>\n<ol>\n<li>Null인 경우 쓰레기 값을 넣어서 중복을 인지하게 만들자.</li>\n</ol>\n<p>는 바로 기각했다. 우선 쓰레기 값을 넣는 게 마음에 안 들었다. 그 값이 무슨 값인지 다른 사람이 보면 알 방법이 없다.</p>\n<ol start=\"2\">\n<li>partial query를 사용한 Unique index 생성</li>\n</ol>\n<p>(참조 - <a href=\"https://stackoverflow.com/questions/8289100/create-unique-constraint-with-null-columns\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://stackoverflow.com/questions/8289100/create-unique-constraint-with-null-columns</a>)</p>\n<p>이 방법도 기각했다. 아마 Null이 허용되는 컬럼이 하나뿐이었으면 이 방법을 고려했을지도 모르겠다.</p>\n<ol start=\"3\">\n<li>테이블 분리</li>\n</ol>\n<p>아마 이 방법은 특수한 상황에서만 가능할 것 같다. 대개 2번이 해결방안이 되지 않을까 싶다. (대게는 맛있다. 겨울엔 방어도 맛있다. 요즘 참돔도 맛있다는데..)</p>\n<p>내 경우 null이 있는 컬럼이 여럿이었다. 예를 들어서 a b c d 컬럼이 있을 때, a 컬럼에 따라서 3가지 경우가 있는 것과 같았다.</p>\n<table>\n<thead>\n<tr>\n<th>a</th>\n<th>b</th>\n<th>c</th>\n<th>d</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>O</td>\n<td>null</td>\n<td>null</td>\n</tr>\n<tr>\n<td>2</td>\n<td>O</td>\n<td>0</td>\n<td>null</td>\n</tr>\n<tr>\n<td>3</td>\n<td>O</td>\n<td>0</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n<p>만약 이 경우의 수가 좀 더 랜덤했다면 나는 2번도 쓰지 않고 1번을 최후의 보루로 생각했을 것이다.</p>\n<p>그러나 케이스가 좀 깔끔했기 때문에 테이블을 분리하면 더 깔끔한 구조가 될 것이라 생각했다.</p>\n<p>결과는 만족.</p>","tableOfContents":"<ul>\n<li><a href=\"/study/when-the-duplicates-are-created-on-postgreSQL-with-unique-index-by-null/#%EB%AC%B8%EC%A0%9C%EC%9D%98-%EB%B0%9C%EB%8B%A8\">문제의 발단</a></li>\n<li><a href=\"/study/when-the-duplicates-are-created-on-postgreSQL-with-unique-index-by-null/#%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\">해결 방법</a></li>\n</ul>","timeToRead":1,"frontmatter":{"title":"PostgreSQL에서 unique index에 null 값으로 인해 중복이 생성되는 경우","date":"November 16, 2020","description":"회사에서 개발 중 만난 문제","category":"study"}}},"pageContext":{"slug":"/study/when-the-duplicates-are-created-on-postgreSQL-with-unique-index-by-null/","previous":{"fields":{"slug":"/study/function-that-gunzips-stream-and-returns/"},"frontmatter":{"title":"Json gzip stream을 unzip하여 리턴하기","category":"study"}},"next":null}},"staticQueryHashes":["2718815002","452372368","63159454"]}
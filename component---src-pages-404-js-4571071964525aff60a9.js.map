{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","location","_components_seo__WEBPACK_IMPORTED_MODULE_2__","React","Component","pageQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_1__","typography__WEBPACK_IMPORTED_MODULE_1___default","n","typography_theme_github__WEBPACK_IMPORTED_MODULE_2__","typography_theme_github__WEBPACK_IMPORTED_MODULE_2___default","GitHub","overrideThemeStyles","a:hover","textDecoration","a.gatsby-resp-image-link","boxShadow","h1, h2, h3","marginTop","bodyFontFamily","aFontFamily","typography","Typography","react__WEBPACK_IMPORTED_MODULE_0__","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","createContext","ProdPageRenderer","_ref","pageResources","InternalPageRenderer","Object","assign","json","Layout","header","children","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","style","marginBottom","gatsby__WEBPACK_IMPORTED_MODULE_2__","color","to","fontFamily","marginLeft","marginRight","maxWidth","padding","paddingTop","href","target","rel","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-404-js-4571071964525aff60a9.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import './global.css';\n\nimport Typography from \"typography\"\nimport GitHub from \"typography-theme-github\"\n\nGitHub.overrideThemeStyles = () => {\n  return {\n    'a:hover': {\n      textDecoration: `none`,\n    },\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n      textDecoration: `none`,\n    },\n    'h1, h2, h3': {\n      marginTop: `2.625rem`\n    }\n  }\n}\n\nGitHub.bodyFontFamily = ['NanumGothic'];\nGitHub.aFontFamily = ['NanumGothic'];\n\nconst typography = new Typography(GitHub)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst Layout = (props) => {\n  const { location, title, children } = props\n  const rootPath = `${__PATH_PREFIX__}/`\n  let header\n\n  if (location.pathname === rootPath) {\n    header = (\n      <h1\n        style={{\n          ...scale(1.5),\n          marginBottom: rhythm(1.5),\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <h3\n        style={{\n          fontFamily: `Montserrat, sans-serif`,\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n      </h3>\n    )\n  }\n  return (\n    <div\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(24),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n      }}\n    >\n      <header>{header}</header>\n      <main>{children}</main>\n      <footer\n        style={{\n          marginTop: '4.375rem',\n          paddingTop: '1.75rem'\n        }}\n      >\n        <a href={`https://github.com/ohseunghyeon`} target=\"_blank\" rel=\"noopener noreferrer\">\n          github\n        </a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}